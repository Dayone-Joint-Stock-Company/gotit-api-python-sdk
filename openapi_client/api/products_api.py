"""
    Sample API

    Technical document APIs for API Version 4.  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Contact: quang.huynh@gotit.vn
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.httpbadrequest import HTTPBADREQUEST
from openapi_client.model.httpinternalservererror import HTTPINTERNALSERVERERROR
from openapi_client.model.httpnotfound import HTTPNOTFOUND
from openapi_client.model.httpunauthorized import HTTPUNAUTHORIZED
from openapi_client.model.productdetailresponse import PRODUCTDETAILRESPONSE
from openapi_client.model.productsresponse import PRODUCTSRESPONSE
from openapi_client.model.storesresponse import STORESRESPONSE


class ProductsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_list_of_products_endpoint = _Endpoint(
            settings={
                'response_type': (PRODUCTSRESPONSE,),
                'auth': [],
                'endpoint_path': '/api/v4.0/products',
                'operation_id': 'get_list_of_products',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'x_gi_authorization',
                    'page',
                    'page_size',
                    'min_price',
                    'max_price',
                    'is_exclude_store_list_info',
                    'store_list_page',
                    'store_list_page_size',
                ],
                'required': [
                    'x_gi_authorization',
                    'page',
                    'page_size',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'x_gi_authorization':
                        (str,),
                    'page':
                        (int,),
                    'page_size':
                        (int,),
                    'min_price':
                        (int,),
                    'max_price':
                        (int,),
                    'is_exclude_store_list_info':
                        (bool,),
                    'store_list_page':
                        (int,),
                    'store_list_page_size':
                        (int,),
                },
                'attribute_map': {
                    'x_gi_authorization': 'X-GI-Authorization',
                    'page': 'page',
                    'page_size': 'pageSize',
                    'min_price': 'minPrice',
                    'max_price': 'maxPrice',
                    'is_exclude_store_list_info': 'isExcludeStoreListInfo',
                    'store_list_page': 'storeListPage',
                    'store_list_page_size': 'storeListPageSize',
                },
                'location_map': {
                    'x_gi_authorization': 'header',
                    'page': 'query',
                    'page_size': 'query',
                    'min_price': 'query',
                    'max_price': 'query',
                    'is_exclude_store_list_info': 'query',
                    'store_list_page': 'query',
                    'store_list_page_size': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_product_detail_endpoint = _Endpoint(
            settings={
                'response_type': (PRODUCTDETAILRESPONSE,),
                'auth': [],
                'endpoint_path': '/api/v4.0/products/{id}',
                'operation_id': 'get_product_detail',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'x_gi_authorization',
                    'id',
                    'is_exclude_store_list_info',
                    'store_list_page',
                    'store_list_page_size',
                ],
                'required': [
                    'x_gi_authorization',
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'x_gi_authorization':
                        (str,),
                    'id':
                        (int,),
                    'is_exclude_store_list_info':
                        (bool,),
                    'store_list_page':
                        (int,),
                    'store_list_page_size':
                        (int,),
                },
                'attribute_map': {
                    'x_gi_authorization': 'X-GI-Authorization',
                    'id': 'id',
                    'is_exclude_store_list_info': 'isExcludeStoreListInfo',
                    'store_list_page': 'storeListPage',
                    'store_list_page_size': 'storeListPageSize',
                },
                'location_map': {
                    'x_gi_authorization': 'header',
                    'id': 'path',
                    'is_exclude_store_list_info': 'query',
                    'store_list_page': 'query',
                    'store_list_page_size': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_stores_of_product_endpoint = _Endpoint(
            settings={
                'response_type': (STORESRESPONSE,),
                'auth': [],
                'endpoint_path': '/api/v4.0/products/{id}/stores',
                'operation_id': 'get_stores_of_product',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'x_gi_authorization',
                    'id',
                ],
                'required': [
                    'x_gi_authorization',
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'x_gi_authorization':
                        (str,),
                    'id':
                        (int,),
                },
                'attribute_map': {
                    'x_gi_authorization': 'X-GI-Authorization',
                    'id': 'id',
                },
                'location_map': {
                    'x_gi_authorization': 'header',
                    'id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def get_list_of_products(
        self,
        x_gi_authorization,
        page,
        page_size,
        **kwargs
    ):
        """Get all products master data  # noqa: E501

        Returns all products master data  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_list_of_products(x_gi_authorization, page, page_size, async_req=True)
        >>> result = thread.get()

        Args:
            x_gi_authorization (str): Authorization
            page (int): Page
            page_size (int): Page Size

        Keyword Args:
            min_price (int): Min price. [optional]
            max_price (int): Max price. [optional]
            is_exclude_store_list_info (bool): Stores. [optional]
            store_list_page (int): Store Page. [optional]
            store_list_page_size (int): Store Page Size. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            PRODUCTSRESPONSE
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['x_gi_authorization'] = \
            x_gi_authorization
        kwargs['page'] = \
            page
        kwargs['page_size'] = \
            page_size
        return self.get_list_of_products_endpoint.call_with_http_info(**kwargs)

    def get_product_detail(
        self,
        x_gi_authorization,
        id,
        **kwargs
    ):
        """Get product detail data  # noqa: E501

        Returns product detail data  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_product_detail(x_gi_authorization, id, async_req=True)
        >>> result = thread.get()

        Args:
            x_gi_authorization (str): Authorization
            id (int): Product ID

        Keyword Args:
            is_exclude_store_list_info (bool): Exclude store list information. [optional]
            store_list_page (int): Store Page. [optional]
            store_list_page_size (int): Store Page Size. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            PRODUCTDETAILRESPONSE
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['x_gi_authorization'] = \
            x_gi_authorization
        kwargs['id'] = \
            id
        return self.get_product_detail_endpoint.call_with_http_info(**kwargs)

    def get_stores_of_product(
        self,
        x_gi_authorization,
        id,
        **kwargs
    ):
        """Get stores of this product  # noqa: E501

        Returns all stores of this product  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_stores_of_product(x_gi_authorization, id, async_req=True)
        >>> result = thread.get()

        Args:
            x_gi_authorization (str): Authorization
            id (int): Product ID

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            STORESRESPONSE
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['x_gi_authorization'] = \
            x_gi_authorization
        kwargs['id'] = \
            id
        return self.get_stores_of_product_endpoint.call_with_http_info(**kwargs)

